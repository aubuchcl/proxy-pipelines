import { ResourceId, UserScope, Events, State, CollectionDoc, SingleDoc, Time } from "../../../common/structs";
import * as Request from "../../../common/api/request";
import { StandardParams } from "../../../common/api";
export declare type Collection = CollectionDoc<Credit>;
export declare type Single = SingleDoc<Credit>;
export declare type CreditState = "new" | "live" | "expired";
export declare type CreditEvent = "expires";
export interface Credit {
    id: ResourceId;
    hub_id: ResourceId;
    description: string;
    creator: UserScope;
    account_id: ResourceId;
    amount: number;
    amount_remaining: number;
    expires: Expires | null;
    events: Events<CreditEvent>;
    state: State<CreditState>;
}
export interface AssociatedCredit {
    id: ResourceId;
    amount: number;
}
export interface Expires {
    date: Time;
}
export declare function getCollection(params: StandardParams): Promise<Request.ApiResult<Collection>>;
export declare function getSingle(params: StandardParams & {
    id: ResourceId;
}): Promise<Request.ApiResult<Single>>;
