import { ResourceId, Events, State, UserScope, Mills, Resource, CollectionDoc, SingleDoc } from "../../../common/structs";
import { StandardParams } from "../../../common/api";
import * as Request from "../../../common/api/request";
import { Term } from "../term";
import { Item } from "./item";
import { Amount } from "../amount";
import { AssociatedDiscount } from "../discounts";
import { PlanType } from "../../billing/plans";
export declare type Collection = CollectionDoc<Service>;
export declare type Single = SingleDoc<Service>;
export declare type ServiceEvent = "last_billed";
export declare type ServiceState = "active";
export interface Service extends Resource {
    creator: UserScope;
    hub_id: ResourceId;
    title: string;
    order: Order;
    item: Item;
    events: Events<ServiceEvent>;
    discount: AssociatedDiscount | null;
    price: Amount;
    term: Term;
    state: State<ServiceState>;
}
export interface Order {
    id: ResourceId;
    item_id: ResourceId;
}
export interface Summary {
    service_id: ResourceId;
    title: string;
    type: PlanType;
    term: Term;
    price: Mills;
    discount: Mills;
}
export declare function getSingle(params: StandardParams & {
    id: ResourceId;
}): Promise<Request.ApiResult<Single>>;
export declare function getCollection(params: StandardParams): Promise<Request.ApiResult<Collection>>;
