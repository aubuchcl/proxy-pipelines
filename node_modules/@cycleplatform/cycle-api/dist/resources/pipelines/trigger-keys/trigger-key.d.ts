import { StandardParams } from "../../../common/api";
import * as Request from "../../../common/api/request";
import { CollectionDoc, Events, Resource, ResourceId, SingleDoc, State as StateBase, UserScope } from "../../../common/structs";
/****************************** Key Struct ******************************/
export declare type TriggerKey = Resource & {
    name: string;
    secret: string;
    creator: UserScope;
    hub_id: ResourceId;
    pipeline_id: ResourceId;
    state: State;
    events: Events;
    ips: string[];
};
/****************************** Key Struct Sub Types ******************************/
export declare type State = StateBase<States>;
export declare type States = "live" | "deleting" | "deleted";
/****************************** Metas, Includes, Docs, Query ******************************/
export declare type Collection = CollectionDoc<TriggerKey>;
export declare type Single = SingleDoc<TriggerKey>;
/****************************** Params ******************************/
/** Base Single Params */
export declare type BSP = StandardParams & {
    pipelineId: ResourceId;
    keyId: ResourceId;
};
/** Base Collection Params */
declare type BCP = StandardParams & {
    pipelineId: ResourceId;
};
export declare type GetCollectionParams = BCP;
export declare type CreateParams = BCP & Request.PostParams<CreateValues>;
export declare type UpdateParams = BSP & Request.PatchParams<UpdateValues>;
export declare type GetSingleParams = BSP;
/****************************** Values ******************************/
export declare type CreateValues = {
    name: string;
    ips: string[] | null;
};
export declare type UpdateValues = Partial<CreateValues>;
/****************************** Functions ******************************/
/** Get pipeline keys as a collection
 * @summary get a collection of keys in a given pipeline
 * @param params object containing the target pipelineId to fetch keys for
 */
export declare function getCollection(params: GetCollectionParams): Promise<Request.ApiResult<Collection>>;
export declare function getSingle(params: GetSingleParams): Promise<Request.ApiResult<Single>>;
export declare function create(params: CreateParams): Promise<Request.ApiResult<Single>>;
export declare function update(params: UpdateParams): Promise<Request.ApiResult<Single>>;
export {};
